package ua.com.composeimport android.content.Intentimport android.net.Uriimport android.os.Bundleimport android.os.Parcelableimport androidx.appcompat.app.AppCompatActivityimport androidx.core.splashscreen.SplashScreen.Companion.installSplashScreenimport androidx.core.view.WindowCompatimport androidx.core.view.isVisibleimport androidx.recyclerview.widget.RecyclerViewimport com.google.android.material.bottomsheet.BottomSheetDialogFragmentimport ua.com.compose.customView.SpanningLinearLayoutManagerimport ua.com.compose.databinding.ActivityMainBindingimport ua.com.compose.extension.clearAllFragmentsimport ua.com.compose.extension.navigationBarHeightimport ua.com.compose.extension.replaceimport ua.com.compose.extension.setMarginBottomimport ua.com.compose.extension.setPaddingTopimport ua.com.compose.extension.statusBarHeightimport ua.com.compose.fragments.ColorPickFragmentimport ua.com.compose.mvp.BaseMvpViewimport ua.com.compose.mvp.data.Menuclass MainActivity: AppCompatActivity(), BaseMvpView {    private var binding: ActivityMainBinding? = null    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        installSplashScreen()        WindowCompat.setDecorFitsSystemWindows(window, false)        binding = ActivityMainBinding.inflate(layoutInflater).apply {            setContentView(this.root)        }        binding?.root?.setPaddingTop(statusBarHeight())        supportFragmentManager.replace(fragment = ColorPickFragment.newInstance(null), containerId = R.id.id_fragment_container, addToBackStack = true)        onNewIntent(intent)    }    override fun onDestroy() {        super.onDestroy()        binding = null    }    override fun onNewIntent(intent: Intent?) {        super.onNewIntent(intent)        if(intent?.action == Intent.ACTION_SEND) {            closeAllDialogs()            if (intent.type?.startsWith("image/") == true) {                handleSendImage(intent)            }        }    }    private fun handleSendImage(intent: Intent) {        (intent.getParcelableExtra<Parcelable>(Intent.EXTRA_STREAM) as? Uri)?.let { uri ->            closeAllDialogs()            supportFragmentManager.clearAllFragments()            supportFragmentManager.replace(fragment = ColorPickFragment.newInstance(uri), containerId = R.id.id_fragment_container, addToBackStack = true)        }    }    override fun setupBottomMenu(menu: MutableList<Menu>) {        binding?.bottomMenuContainer?.setMarginBottom(binding?.bottomMenuContainer?.context?.navigationBarHeight() ?: 0)        val currentBottomMenu = menu.filter { it.isVisible.invoke() }.toMutableList()        binding?.bottomMenuContainer?.isVisible = currentBottomMenu.isNotEmpty()        binding?.bottomMenu?.layoutManager = SpanningLinearLayoutManager(this, RecyclerView.HORIZONTAL, false)        binding?.bottomMenu?.adapter = MenuRvAdapter(menu = currentBottomMenu)    }    private fun closeAllDialogs(){        this.supportFragmentManager.fragments.filterIsInstance<BottomSheetDialogFragment>().forEach {            it.dismissAllowingStateLoss()        }    }    override fun onBackPressed() {        finish()    }}